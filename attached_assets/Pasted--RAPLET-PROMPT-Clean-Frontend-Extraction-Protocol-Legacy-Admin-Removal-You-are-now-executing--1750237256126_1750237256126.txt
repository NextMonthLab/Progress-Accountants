
ðŸ§  RAPLET PROMPT: Clean Frontend Extraction Protocol â€” Legacy Admin Removal

You are now executing a controlled extraction to create a clean frontend-only version of the Progress SmartSite.

The objective is:

âœ… Remove all admin, authentication, and backend dependencies.
âœ… Retain ONLY the public-facing, standalone frontend pages and assets.
âœ… Prepare a fully clean, lightweight, production-ready frontend build suitable for isolated deployment.

â¸»

ðŸ”§ EXTRACTION PROTOCOL

PHASE 1 â€” Create Clean Workspace
	â€¢	Create a fresh clean branch or workspace: progress-frontend-clean.
	â€¢	Work exclusively in this isolated environment.

PHASE 2 â€” Copy Frontend Assets
	â€¢	Retain only the following:
	â€¢	/src/pages/
	â€¢	/src/components/ (excluding /components/admin/ or any subfolders containing admin-specific files)
	â€¢	/src/assets/
	â€¢	/src/lib/ â€” but only retain frontend-necessary utilities.
	â€¢	Copy:
	â€¢	package.json
	â€¢	vite.config.ts
	â€¢	tailwind.config.ts
	â€¢	Any public assets or favicon files.

PHASE 3 â€” Remove Admin Logic
	â€¢	Delete all code referencing:
	â€¢	/admin/* routes
	â€¢	useAuth, AuthProvider
	â€¢	useTenant, TenantProvider, PermissionsProvider
	â€¢	ProtectedRoute or role-based route protection
	â€¢	Delete /components/admin/ and any related CRM or Dashboard files.

PHASE 4 â€” Clean Dependencies
	â€¢	Remove any backend/admin-only libraries from package.json, including:
	â€¢	Auth libraries (e.g. Firebase Auth, Passport)
	â€¢	Database libraries
	â€¢	CRM or multi-tenant packages

PHASE 5 â€” Static API Configuration
	â€¢	Preserve only environment variables related to:
	â€¢	External chatbot
	â€¢	Calendly embed
	â€¢	Any public third-party API integrations
	â€¢	Remove all backend API keys and secret server keys.

PHASE 6 â€” Sanity Checks
	â€¢	Perform code-wide search-and-remove safety audits:

grep -rni 'admin' ./src
grep -rni 'useAuth' ./src
grep -rni 'useTenant' ./src
grep -rni 'usePermissions' ./src

	â€¢	Confirm zero remaining admin or backend logic.

PHASE 7 â€” Build Validation
	â€¢	Run a full Vite build.
	â€¢	Confirm successful build with zero missing imports, undefined providers, or broken routes.

PHASE 8 â€” Prepare for Deployment
	â€¢	Output should be a pure static frontend build suitable for:
	â€¢	Vercel
	â€¢	Netlify
	â€¢	Hetzner (via containerized static deployment)

â¸»

ðŸ”¬ SAFETY REMINDER:
	â€¢	DO NOT alter the original fullstack source repository.
	â€¢	DO NOT remove original admin files from main repository.
	â€¢	This extraction is surgical and non-destructive.

If any dependency issues are detected during build, pause and request human intervention before attempting automatic fixes.

â¸»

âœ… Proceed with caution. The integrity of this clean build is paramount.
