üß† RAPLET FINAL SURGICAL REPAIR ‚Äî PROGRESS ACCOUNTANTS FRONTEND

We are performing a final purge to prepare this repo for fully stable Hetzner deployment.

üîß PROJECT CONTEXT
	‚Ä¢	Repo: Progress-Accountants
	‚Ä¢	Deployment: Hetzner VPS via Docker (static NGINX container)
	‚Ä¢	Frontend fully decoupled from backend
	‚Ä¢	No health system, no analytics monitoring, no live API dependencies at this stage

üî¨ TASKS:

1Ô∏è‚É£ GLOBAL HEALTH SYSTEM PURGE
	‚Ä¢	Completely remove all logic referencing:
	‚Ä¢	Health System Initialization
	‚Ä¢	Help System Initialization
	‚Ä¢	Session Monitoring
	‚Ä¢	Any health-status or monitoring endpoints.
	‚Ä¢	Fully eliminate these from:
	‚Ä¢	/client/
	‚Ä¢	/pallets/progress-smart-site/client/
	‚Ä¢	/listener/
	‚Ä¢	Any utility/helper files.

2Ô∏è‚É£ REMOVE EMBEDDED DEPENDENCY CALLS
	‚Ä¢	Search for any API calls or WebSocket attempts still embedded in frontend files.
	‚Ä¢	Ensure all embed components fail gracefully if backends are absent (static placeholder if needed).
	‚Ä¢	The frontend must behave as fully static.

3Ô∏è‚É£ MOBILE RESPONSIVENESS HARDENING
	‚Ä¢	Apply global overflow-x: hidden to body, html, and all scrollable containers to prevent horizontal drift.
	‚Ä¢	Ensure hero sections scale correctly on small screens. Images must fit entirely inside viewport.

4Ô∏è‚É£ ASSET OPTIMIZATION
	‚Ä¢	Convert all remaining large images to optimized formats (preferably .webp or pre-compressed JPEG).
	‚Ä¢	Apply lazy loading to non-critical images.
	‚Ä¢	Ensure all public-facing assets are pre-bundled for instant page rendering.

5Ô∏è‚É£ VITE BUNDLE CLEANUP
	‚Ä¢	Confirm that vite.config.ts is correctly optimized:
	‚Ä¢	Chunk splitting where necessary.
	‚Ä¢	Tree-shaking of unused dependencies.
	‚Ä¢	Eliminate any unnecessary large imports.

6Ô∏è‚É£ FINAL OUTPUT REQUIREMENT

‚úÖ Output must fully build inside Docker using:

docker compose build --no-cache
docker compose up -d

‚úÖ Frontend must load instantly without initialization delays or warnings.

‚úÖ No console warnings or failed requests in browser dev tools.

‚úÖ Fully compatible with Hetzner static deployment pipeline.

‚∏ª

‚ö† DO NOT preserve legacy files for rollback ‚Äî this is a full production purge to create a stable final Hetzner frontend image.

‚∏ª

Once this is complete, confirm:

‚Äú‚úÖ RAPLET HARDENING COMPLETE ‚Äî CLEAN FOR HETZNER DEPLOYMENT‚Äù
